pr:
- main
- azure-pipelines

pool:
  vmImage: ubuntu-latest

variables:
  webapp.name: 'alphasite-appservice-dev'
  webapp.resourceGroup: 'AlphasiteAppserviceRG'
  webapp.slotName: 'pr-preview-$(System.PullRequest.PullRequestId)'
  azureContainerRegistry.name: 'alphasiteCRdev'
  azureContainerRegistry.repository: 'alphasite'
  azureContainerRegistry.domain: 'alphasitecrdev.azurecr.io'
  azureContainerRegistry.tag: 'preview-$(Build.SourceVersion)'
  System.Debug: true

steps:
# TODO: Use a generic service principle for comments (not andr0272 / a PAT)
- task: GitHubComment@0
  displayName: "Let the requester know a preview is being dispatched via GitHub Comments"
  condition: eq(variables['Build.Reason'], 'PullRequest')
  inputs:
    gitHubConnection: 'andr0272'
    repositoryName: '$(Build.Repository.Name)'
    comment: 'A pull request preview is being generated. Hold tight!'
# TODO: This Dockerfile needs optomization. 10 minute builds defeat the purpose of PR previews
- task: Docker@2
  displayName: "Build image"
  condition: eq(variables['Build.Reason'], 'PullRequest')
  inputs:
    containerRegistry: '$(azureContainerRegistry.name)'
    repository: '$(azureContainerRegistry.repository)'
    command: 'build'
    Dockerfile: '**/Dockerfile'
    tags: '$(azureContainerRegistry.tag)'
    arguments: |
      --build-arg TC_BUILD=$(ADO_BUILD) 
      --build-arg MONGO_DB=$(MONGO_DB) 
      --build-arg ADOBE_ANALYTICS_URL=$(ADOBE_ANALYTICS_URL) 
      --build-arg NEXT_PUBLIC_NOTIFY_REPORT_A_PROBLEM_EMAIL=$(NEXT_PUBLIC_NOTIFY_REPORT_A_PROBLEM_EMAIL) 
      --build-arg THANK_YOU_EMAIL=$(THANK_YOU_EMAIL) 
      --build-arg AEM_GRAPHQL_ENDPOINT=$(AEM_GRAPHQL_ENDPOINT) 
      --build-arg REVALIDATION_TOKEN=$(REVALIDATION_TOKEN) 
      --build-arg GIT_SHA=$(GIT_SHA)
- task: Docker@2
  displayName: "Push image"
  condition: eq(variables['Build.Reason'], 'PullRequest')
  inputs:
    command: 'push'
    containerRegistry: $(azureContainerRegistry.name)
    repository: $(azureContainerRegistry.repository)
    tags: $(azureContainerRegistry.tag)
# TODO: Standard SKU for appservice caps at 5 dep slots, can't have more than 3 concurrent PRs at the moment. 
- task: AzureCLI@2
  displayName: 'Create new slot in App Service'
  condition: eq(variables['Build.Reason'], 'PullRequest')
  inputs:
    azureSubscription: 'SCLabsDev'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: 'az webapp deployment slot create --name $(webapp.name) --resource-group $(webapp.resourceGroup) --slot $(webapp.slotName)'
- task: AzureRmWebAppDeployment@4
  displayName: "Deploy to new slot in App Service"
  condition: eq(variables['Build.Reason'], 'PullRequest')
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'SCLabsDev'
    appType: 'webAppContainer'
    WebAppName: '$(webapp.name)'
    deployToSlotOrASE: true
    ResourceGroupName: '$(webapp.resourceGroup)'
    SlotName: '$(webapp.slotName)'
    DockerNamespace: '$(azureContainerRegistry.name)'
    DockerRepository: '$(azureContainerRegistry.repository)'
    DockerImageTag: '$(azureContainerRegistry.tag)'
# TODO: Update comment vs make new comment
- task: GitHubComment@0
  displayName: "add the webapp link to the PR via GitHub Comments"
  condition: eq(variables['Build.Reason'], 'PullRequest')
  inputs:
    gitHubConnection: 'andr0272'
    repositoryName: '$(Build.Repository.Name)'
    comment: "Check out a preview of your pull request here: https://$(webapp.name)-$(webapp.slotName).azurewebsites.net"
# This job only runs if the job was triggered outside of a pull request (PR Merged or Closed)
- task: AzureCLI@2
  displayName: 'Delete preview slot in App Service once the PR is closed'
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
  inputs:
    azureSubscription: 'SCLabsDev'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      # Get the commit message from the branch that triggered this run
      sourceVersionMessage="$(Build.SourceVersionMessage)"
      echo 'build source version message: ' $sourceVersionMessage
      # Get the PR number from the above commit message
      prNumber=$(echo $sourceVersionMessage| sed -r 's/^([^.]+).*$/\1/; s/^[^0-9]*([0-9]+).*$/\1/')
      echo 'prNumber: ' $prNumber
      # See if there is a staging slot open related to that PR, and close it
      if [ -z "$prNumber" ]
      then
        echo 'no PR number found in last commit message'
        echo 'exiting'
        exit
      else
        az webapp deployment slot delete --name $(webapp.name) --resource-group $(webapp.resourceGroup) --slot pr-preview-$prNumber
      fi
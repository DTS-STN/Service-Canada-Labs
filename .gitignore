# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules
/.pnp
.pnp.js

# testing
/coverage

# next.js
/.next/
/out/

# production
/build

# misc
.DS_Store
*.pem

# debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# local env files
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# vercel
.vercel

#storybooks
/storybook-static

#jest coverage
/coverage

# cypress video

/cypress/videos
/cypress/screenshots

# Local .terraform directories
**/.terraform/*
**/provider.tf
**/.terraform.lock.hcl
*.pfx
# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log

#
*.tfvars
!example.tfvars

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json
terraform/variables.json

# Include override files you do wish to add to version control using negated pattern
#
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc

# IDE related files
.vscode
.idea

graphql/.cache/

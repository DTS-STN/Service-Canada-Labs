(self.webpackChunkservice_canada_labs=self.webpackChunkservice_canada_labs||[]).push([[9797],{"./components/atoms/SearchBar.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Primary:()=>Primary,__namedExportsOrder:()=>__namedExportsOrder,default:()=>SearchBar_stories});var jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types);function SearchBar(props){return(0,jsx_runtime.jsxs)("form",{className:"w-full inline-flex h-9 lg:w-full xl:w-80 w-full border border-solid border-gray-light-100",onSubmit:props.onSubmit,"data-cy":props.dataCy,children:[(0,jsx_runtime.jsx)("input",{type:"text",placeholder:props.placeholder,className:"placeholder-text-gray text-text-gray font-body py-1 px-2 focus:outline-none w-full",onChange:props.onChange}),(0,jsx_runtime.jsx)("button",{title:"Search bar button",type:"submit",className:"bg-custom-blue-dark text-white text-center text-base rounded-none pt-0.5 h-full w-10 hover:bg-gray-dark active:bg-gray-dark focus:bg-gray-dark",children:(0,jsx_runtime.jsx)("span",{className:"icon-search"})})]})}SearchBar.propTypes={placeholder:prop_types_default().string.isRequired,onChange:prop_types_default().func,onSubmit:prop_types_default().func,dataCy:prop_types_default().string},SearchBar.__docgenInfo={description:"component",methods:[],displayName:"SearchBar",props:{placeholder:{description:"Placeholder for the search bar",type:{name:"string"},required:!0},onChange:{description:"Action to do on input change",type:{name:"func"},required:!1},onSubmit:{description:"Action to do on form submit",type:{name:"func"},required:!1},dataCy:{description:"Test id for cypress test",type:{name:"string"},required:!1}}};const SearchBar_stories={title:"Components/Atoms/SearchBar",component:SearchBar},Primary=(args=>(0,jsx_runtime.jsx)(SearchBar,{...args})).bind({});Primary.args={placeholder:"Search Canada.ca"};const __namedExportsOrder=["Primary"];Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:"args => <SearchBar {...args} />",...Primary.parameters?.docs?.source}}}},"./node_modules/prop-types/factoryWithThrowingShims.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var ReactPropTypesSecret=__webpack_require__("./node_modules/prop-types/lib/ReactPropTypesSecret.js");function emptyFunction(){}function emptyFunctionWithReset(){}emptyFunctionWithReset.resetWarningCache=emptyFunction,module.exports=function(){function shim(props,propName,componentName,location,propFullName,secret){if(secret!==ReactPropTypesSecret){var err=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw err.name="Invariant Violation",err}}function getShim(){return shim}shim.isRequired=shim;var ReactPropTypes={array:shim,bigint:shim,bool:shim,func:shim,number:shim,object:shim,string:shim,symbol:shim,any:shim,arrayOf:getShim,element:shim,elementType:shim,instanceOf:getShim,node:shim,objectOf:getShim,oneOf:getShim,oneOfType:getShim,shape:getShim,exact:getShim,checkPropTypes:emptyFunctionWithReset,resetWarningCache:emptyFunction};return ReactPropTypes.PropTypes=ReactPropTypes,ReactPropTypes}},"./node_modules/prop-types/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/prop-types/factoryWithThrowingShims.js")()},"./node_modules/prop-types/lib/ReactPropTypesSecret.js":module=>{"use strict";module.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"}}]);
name: $(Date:yyyyMMdd)

trigger:
  - main

pr: none

variables:
  imageRepository: 'alphasite'
  ADO_BUILD: $(Build.BuildId)
  BUILD_DATE: $(Build.BuildNumber)
  tag: 'ADO-$(ADO_BUILD)'
  vmImageName: 'ubuntu-latest'
  GIT_SHA: $(Build.SourceVersion)

stages:
  - stage: Build
    displayName: Build and Push to ACR
    jobs:
      - job: Build
        displayName: Build and Push Container
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: Docker@2
            inputs:
              containerRegistry: '$(ACR_NAME)'
              repository: '$(imageRepository)'
              command: 'build'
              Dockerfile: './Dockerfile'
              tags: |
                $(tag)
                release-candidate
              arguments: |
                --pull 
                --build-arg NEXT_PUBLIC_BUILD_ID=$(ADO_BUILD) 
                --build-arg NEXT_PUBLIC_BUILD_DATE=$(BUILD_DATE) 
                --build-arg ADOBE_ANALYTICS_URL=$(ADOBE_ANALYTICS_URL) 
                --build-arg NEXT_PUBLIC_NOTIFY_REPORT_A_PROBLEM_EMAIL=$(NEXT_PUBLIC_NOTIFY_REPORT_A_PROBLEM_EMAIL) 
                --build-arg ISR_ENABLED=$(ISR_ENABLED) 
                --build-arg THANK_YOU_EMAIL=$(THANK_YOU_EMAIL) 
                --build-arg AEM_GRAPHQL_ENDPOINT=$(AEM_GRAPHQL_ENDPOINT) 
                --build-arg REVALIDATION_TOKEN=$(REVALIDATION_TOKEN) 
                --build-arg GIT_SHA=$(GIT_SHA)
          - task: Docker@2
            inputs:
              containerRegistry: 'alphasiteCRdev-7/10/2023'
              repository: '$(imageRepository)'
              command: 'push'
              tags: |
                $(tag)
                release-candidate
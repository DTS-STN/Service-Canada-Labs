name: $(Date:yyyyMMdd)

trigger:
  - main

pr: none

variables:
  azureContainerRegistry.repository: 'servicecanadalabs'
  azureContainerRegistry.name: 'DTS Shared Container Repo 10/11/2023'
  azureContainerRegistry.domain: 'dtsshared.azurecr.io'
  tag: 'ADO-$(Build.BuildId)'
  vmImageName: 'ubuntu-latest'

stages:
  - stage: Build
    displayName: Build and Push to ACR
    jobs:
      - job: Build
        displayName: Build and Push Container
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: Docker@2
            inputs:
              containerRegistry: '$(azureContainerRegistry.name)'
              repository: '$(azureContainerRegistry.repository)'
              command: 'login'
          - script: "docker pull $(azureContainerRegistry.domain)/$(azureContainerRegistry.repository):latest"
            displayName: Pull latest for layer caching
            continueOnError: true
          - task: Docker@2
            inputs:
              containerRegistry: '$(azureContainerRegistry.name)'
              repository: '$(azureContainerRegistry.repository)'
              command: 'build'
              Dockerfile: './Dockerfile'
              tags: |
                $(tag)
                latest
                release-candidate
              arguments: |
                --pull 
                --build-arg NEXT_PUBLIC_BUILD_ID=$(ADO_BUILD) 
                --build-arg NEXT_PUBLIC_BUILD_DATE=$(BUILD_DATE) 
                --build-arg ADOBE_ANALYTICS_URL=$(ADOBE_ANALYTICS_URL) 
                --build-arg NEXT_PUBLIC_NOTIFY_REPORT_A_PROBLEM_EMAIL=$(NEXT_PUBLIC_NOTIFY_REPORT_A_PROBLEM_EMAIL) 
                --build-arg ISR_ENABLED=$(ISR_ENABLED) 
                --build-arg THANK_YOU_EMAIL=$(THANK_YOU_EMAIL) 
                --build-arg AEM_GRAPHQL_ENDPOINT=$(AEM_GRAPHQL_ENDPOINT) 
                --build-arg REVALIDATION_TOKEN=$(REVALIDATION_TOKEN) 
                --build-arg GIT_SHA=$(Build.SourceVersion)
                --build-arg ENVIRONMENT=$(ENVIRONMENT)
                
          - task: Docker@2
            inputs:
              containerRegistry: '$(azureContainerRegistry.name)'
              repository: '$(azureContainerRegistry.repository)'
              command: 'push'
              tags: |
                $(tag)
                latest
                release-candidate
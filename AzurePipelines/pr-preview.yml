pr:
- main
- azure-pipelines

pool:
  vmImage: ubuntu-latest

variables:
  azure.servicePrincipal: 'SCLabsDev'
  webapp.name: 'alphasite-appservice-dev'
  webapp.resourceGroup: 'AlphasiteAppserviceRG'
  webapp.slotName: null
  # webapp.slotName: 'pr-preview-$(System.PullRequest.PullRequestId)'
  azureContainerRegistry.name: 'alphasiteCRdev-7/10/2023'
  azureContainerRegistry.repository: 'alphasite'
  azureContainerRegistry.domain: 'alphasitecrdev.azurecr.io'
  azureContainerRegistry.tag: 'preview-$(Build.SourceVersion)'
  System.Debug: true

steps:
- task: Docker@2
  condition: eq(variables['Build.Reason'], 'PullRequest')
  inputs:
    containerRegistry: '$(azureContainerRegistry.name)'
    repository: '$(azureContainerRegistry.repository)'
    command: 'login'
- script: "docker pull alphasitecrdev.azurecr.io/$(azureContainerRegistry.repository):latest"
  condition: eq(variables['Build.Reason'], 'PullRequest')
  displayName: Pull latest for layer caching
  continueOnError: true # for first build, no cache
# TODO: This Dockerfile needs optomization. 10 minute builds defeat the purpose of PR previews
- task: Docker@2
  displayName: "Build image"
  condition: eq(variables['Build.Reason'], 'PullRequest')
  inputs:
    containerRegistry: '$(azureContainerRegistry.name)'
    repository: '$(azureContainerRegistry.repository)'
    command: 'build'
    Dockerfile: '**/Dockerfile'
    tags: |
      $(azureContainerRegistry.tag)
      latest
    arguments: |
      --cache-from alphasitecrdev.azurecr.io/$(azureContainerRegistry.repository):latest
      --build-arg NEXT_PUBLIC_BUILD_ID=$(ADO_BUILD) 
      --build-arg NEXT_PUBLIC_BUILD_DATE=$(BUILD_DATE)
      --build-arg MONGO_DB=$(MONGO_DB) 
      --build-arg ADOBE_ANALYTICS_URL=$(ADOBE_ANALYTICS_URL) 
      --build-arg NEXT_PUBLIC_NOTIFY_REPORT_A_PROBLEM_EMAIL=$(NEXT_PUBLIC_NOTIFY_REPORT_A_PROBLEM_EMAIL) 
      --build-arg THANK_YOU_EMAIL=$(THANK_YOU_EMAIL) 
      --build-arg AEM_GRAPHQL_ENDPOINT=$(AEM_GRAPHQL_ENDPOINT) 
      --build-arg REVALIDATION_TOKEN=$(REVALIDATION_TOKEN) 
      --build-arg GIT_SHA=$(GIT_SHA)
- task: Docker@2
  displayName: "Push image"
  condition: eq(variables['Build.Reason'], 'PullRequest')
  inputs:
    containerRegistry: '$(azureContainerRegistry.name)'
    repository: '$(azureContainerRegistry.repository)'
    command: 'push'
    tags: |
      $(azureContainerRegistry.tag)
      latest
# TODO: Standard SKU for appservice caps at 5 dep slots, can't have more than 4 concurrent PRs at the moment. 
- task: Bash@3
  env: 
      PULLREQUESTID: $(System.PullRequest.PullRequestId)
  inputs:
    targetType: 'inline'
    script: |
      #! /bin/bash
      # Decide which slot to deploy to based on PR number
            x=$(($PULLREQUESTID % 4))
            echo $x
            echo "##vso[task.setvariable variable=webapp.slotName;isOutput=true]$x"
- task: AzureCLI@2
  displayName: 'Create new slot in App Service'
  condition: eq(variables['Build.Reason'], 'PullRequest')
  inputs:
    azureSubscription: $(azure.servicePrincipal)
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: 'az webapp deployment slot create --name pr-preview-$(webapp.name) --resource-group $(webapp.resourceGroup) --slot $(webapp.slotName)'
- task: AzureCLI@2
  displayName: 'Deploy pr image to new slot'
  condition: eq(variables['Build.Reason'], 'PullRequest')
  inputs:
    azureSubscription: $(azure.servicePrincipal)
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      az webapp config container set \
      --docker-custom-image-name alphasitecrdev.azurecr.io/$(azureContainerRegistry.repository):$(azureContainerRegistry.tag) \
      --docker-registry-server-url $(azureContainerRegistry.domain) \
      --docker-registry-server-user $(azureContainerRegistry.name) \
      --docker-registry-server-password $(DOCKER_REGISTRY_SERVER_PASSWORD) \
      --name pr-preview-$(webapp.name) \
      --slot $(webapp.slotName) \
      --resource-group $(webapp.resourceGroup)

# TODO: Use a generic service principle for comments (not andr0272 / a PAT)
- task: GitHubComment@0
  displayName: "add the webapp link to the PR via GitHub Comments"
  condition: eq(variables['Build.Reason'], 'PullRequest')
  inputs:
    gitHubConnection: 'andr0272'
    repositoryName: '$(Build.Repository.Name)'
    comment: "Check out a preview of your pull request here: https://$(webapp.name)-$(webapp.slotName).azurewebsites.net"
# This job only runs if the job was triggered outside of a pull request (PR Merged or Closed)
- task: AzureCLI@2
  displayName: 'Delete preview slot in App Service once the PR is closed'
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
  inputs:
    azureSubscription: $(azure.servicePrincipal)
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      # Get the commit message from the branch that triggered this run
      sourceVersionMessage="$(Build.SourceVersionMessage)"
      echo 'build source version message: ' $sourceVersionMessage
      # Get the PR number from the above commit message
      prNumber=$(echo $sourceVersionMessage | grep -Po "\(#\d*\)$" | grep -Po "\d+" )
      echo 'prNumber: ' $prNumber
      # See if there is a staging slot open related to that PR, and close it
      re='^[0-9]+$'
      if ! [[ $prNumber =~ $re ]];
      then
        echo 'no PR number found in last commit message'
        echo 'exiting'
        exit
      else
        echo 'deleting staging slot pr-preview-'$prNumber
        az webapp deployment slot delete --name $(webapp.name) --resource-group $(webapp.resourceGroup) --slot pr-preview-$prNumber
      fi